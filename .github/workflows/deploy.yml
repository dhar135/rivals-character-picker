# .github/workflows/deploy.yml

# Name of the workflow
name: Deploy Vite Site to Pages

# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the main branch
  push:
    branches: ["main"] # Or "master" depending on your default branch name

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    outputs: # Declare job outputs
      deployment_needed: ${{ steps.deployment_check.outputs.deployment_needed }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20 # Use a recent LTS version
          cache: 'pnpm' # Cache pnpm dependencies
      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 9 # Specify pnpm version if needed, or let it auto-detect
      - name: Install dependencies
        run: pnpm install
      - name: Build
        run: pnpm run build # Runs "tsc && vite build" from your package.json
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload the 'dist' directory (Vite's default build output folder)
          path: './dist'
      - name: Deploy check # Optional: Add a check to see if deployment is needed
        id: deployment_check
        run: echo "deployment_needed=$(if [ -d './dist' ]; then echo true; else echo false; fi)" >> $GITHUB_OUTPUT

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: needs.build.outputs.deployment_needed == 'true' # Use needs context to access output from build job
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
